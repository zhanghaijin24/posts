---
title: "lenovo-ubuntu"
date: 2021-07-23T16:05:32+08:00
draft: true
---
#+STARTUP: overview
* config ubuntu20.04

** Install Ubuntu20.04 with U drive
lsblk
sudo umount /dev/sdc1
sudo mkfs.vfat -F32 -I /dev/sdc
sudo dd if=./ubuntu-20.04.2.0-desktop-amd64.iso of=/dev/sdc bs=1M status=progress

** wifi
sudo apt install bcmwl-kernel-source
**  chinese input method

sudo apt install fcitx-bin fcitx-googlepinyin 

fcitx-configtool

nvim ~/.xprofile
#+BEGIN_SRC  emacs-lisp

export GTK_IM_MODULE=fcitx
export XMODIFIERS="@im=fcitx"
export QT_IM_MODULE=fcitx

#+END_SRC

* config zsh ohmyzsh
sudo apt install zsh

sudo nvim /etc/passwd
david:x:1000:1000::/home/david:/bin/zsh
** ohmyzsh
*** Install 
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
*** plugin
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

#+BEGIN_SRC emacs-lisp
nvim ~/.zshrc
plugins=(git
	zsh-syntax-highlighting	
	zsh-autosuggestions
	)
#+END_SRC

* Install AppImageLauncher
sudo add-apt-repository ppa:appimagelauncher-team/stable
sudo apt-get update
sudo apt-get install appimagelauncher



** config proxychains4

1.sudo apt install -y proxychains4

2.sudo nvim /etc/proxychains4.conf
socks5 127.0.0.1089

3.curl cip.cc

4.nvim ~/.zshrc
alias pc="proxychains4"

alias ep='export https_proxy="127.0.0.1:1089" && export http_proxy="127.0.0.1:1089"'

** CapsLk and Esc 
nvim ~/.Xmodmap

clear lock
keycode 66 = Escape NoSymbol NoSymbol
keycode 9 = Caps_Lock NoSymbol Caps_Lock

** config neovim
cd ~/.config
git clone https://gitee.com/zhanghaijin24/nvim

zsh: command not found: pip3 ubuntu20.04

sudo apt install python3-pip

*** Building Node.js on ubuntu20.04
downloading Source code (tar.gz) 
node-15.13.0.tar.gz

sudo apt-get install python g++ make
sudo apt install python3-distutils -y
./configure
make -j4
sudo make install


*** Install fzf
1.git clone https://gitee.com/zhanghaijin24/fzf.git ~/.fzf
2.~/.fzf/install

nvim ~/.config/zsh/fzf.zsh

source ~/.fzf/shell/completion.zsh
source ~/.fzf/shell/key-bindings.zsh


*** Install ripgrep
github downloading ripgrep-12.1.1-x86_64-unknown-l      inux-musl.tar.gz

sudo mv ripgrep-12.1.1-x86_64-unknown-linux-musl.tar.gz /usr/local
sudo tar zxvf ripgrep-12.1.1-x86_64-unknown-linux-musl.tar.gz
sudo mv ripgrep-12.1.1-x86_64-unknown-linux-musl ripgrep
cd /usr/bin
sudo ln -s /usr/local/ripgrep/rg rg



** Install ranger
1.sudo apt install ranger
2.ranger --copy-config=rc
nvim ~/.zshrc
RANGER_LOAD_DEFAULT_RC=FALSE

nvim ~/.config/

ranger/rc.conf

map gh cd ~
map gi cd ~/Github
map gd cd ~/Desktop
map gf cd ~/.config

map V console shell vim%space


** Install nerd font
wget -c https://github.com/ryanoasis/nerd-fonts/releases/download/v2.0.0/SourceCodePro.zip

sudo unzip SourceCodePro -d /usr/share/fonts/SourceCodePro

cd /usr/share/fonts/SourceCodePro

sudo mkfontscale ;;生成核心字体信息 
sudo mkfontdir ;;生成字体文件夹
sudo fc-cache -fv ;;刷新系统字体缓存

** Config wifi 
#network:
 #version: 2
 #renderer: NetworkManager
 #ethernets:
  #wlp3s0:
   #dhcp4: yes
   #addresses: []
   


#network:
 #version: 2
 #renderer: NetworkManager
 #ethernets:
  #enp4s0:
   #dhcp4: yes
   #addresses: []



#network:
 #version: 2
 #renderer: NetworkManager 
 #ethernets:
   #enp4s0:
        #addresses: 
               #- 192.168.41.124/24
        #gateway4: 192.168.41.1
        #nameservers:
                #addresses: [114.114.114.114]   



#network:
 #version: 2
 #renderer: NetworkManager 
 #ethernets:
   #enp4s0:
        #addresses: 
               #- 10.10.10.45/24
        #gateway4: 10.10.10.4
        #nameservers:
                #addresses: [114.114.114.114]   


** git 
git reset --hard HEAD
git reset --hard HEAD^

** Install How to use the Adobe Source Code Pro font
  1. wget https://github.com/adobe-fonts/source-code-pro/archive/2.030R-ro/1.050R-it.zip
  2. unzip 1.050R-it.zip
  3. fontpath="${XDG_DATA_HOME:-$HOME/.local/share}"/fonts
     mkdir -p $fontpath
  4. cp source-code-pro-*-it/OTF/*.otf $fontpath
  5. fc-cache -f -v      

* Qv2ray
** Install Qv2ray

chmod +x Qv2ray.v2.6.3.linux-x64.AppImage
./Qv2ray.v2.6.3.linux-x64.AppImage

#+BEGIN_SRC emacs-lisp
---------- V2Ray 配置信息 -------------

 地址 (Address) = 45.89.107.239

 端口 (Port) = 10086

 用户ID (User ID / UUID) = 0e4c6df5-58a0-4fe5-abb0-77ea880efbbc

 额外ID (Alter Id) = 0

 传输协议 (Network) = tcp

 伪装类型 (header type) = none

#+END_SRC

** Install v2ray


unzip v2ray-linux-64.zip -d ./vcore/
mv ./vcore ~/.config/qv2ray/


** Create desktop
cd ~/.local/share/applications/
touch qv2ray.desktop
chmod +x qv2ray.desktop

#+BEGIN_SRC emacs-lisp
    [Desktop Entry]

    # The type as listed above
    Type=Application

    # The version of the desktop entry specification to which this file complies
    Version=1.0

    # The name of the application
    Name=qv2ray

    # A comment which can/will be used as a tooltip
    Comment=Flash card based learning tool

    # The executable of the application, possibly with arguments.
    Exec=/home/david/Downloads/./Qv2ray.v2.6.3.linux-x64.AppImage

    # The name of the icon that will be used to display this entry
    Icon=/home/david/AppImages/icons/qv2ray.png

    # Describes whether this application needs to be run in a terminal or not
    Terminal=false

    # Describes the categories in which this entry should be shown
    Categories=Education;Languages;Java;
#+END_SRC
* i3
sudo apt install i3

sudo apt install variety

sudo apt install feh

sudo apt install rofi

touch ~/.config/i3/config
#+BEGIN_SRC  emacs-lisp
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec_always variety

exec feh --randomize --bg-fill ~/.config/variety/Favorites


exec picom -b

exec --no-startup-id fcitx -d

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# Open browser
#bindsym $mod+g exec google-chrome-stable
bindsym $mod+g exec firefox

# Open proxy
bindsym $mod+q exec qv2ray

# Open emacs
bindsym $mod+p exec emacs

#Open ranger
bindsym $mod+m exec alacritty -e ranger

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run
bindsym $mod+d exec rofi -show drun
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

	 #Pressing left will shrink the window’s width.
	 #Pressing right will grow the window’s width.
	 #Pressing up will shrink the window’s height.
	 #Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}

#set $menu --no-startup-id qbbus org.kde.krunner /App display
#bindsym $mod+d exec $menu
new_window none
new_float normal
hide_edge_borders both

# Moving workspaces between screens
bindsym $mod+o move workspace to output right

bindsym $mod+Ctrl+d exec --no-startup-id gnome-disks

#+END_SRC
* spacemacs proxy
   dotspacemacs/user-init

   
;; proxy
(setq url-proxy-services '(("no_proxy" . "127.0.0.1")
				("http" . "127.0.0.1:8889")
				("https" . "127.0.0.1:8889")))


* CapsLK switch to Esc
  nvim .Xmodmap
clear lock
keycode 66 = Escape NoSymbol NoSymbol
keycode 9 = Caps_Lock NoSymbol Caps_Lock

  nvim .zshrc
  if [ -f ~/.Xmodmap ]; then xmodmap ~/.Xmodmap; fi



* Install google-chrome
  wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  sudo apt install ./google-chrome-stable_current_amd64.deb




[Desktop Entry]
Type=Application
Name=Qv2ray vps
GenericName=Qv2ray vps
Comment=Qv2ray vps
Exec=" /home/david/Downlownds/vcore/Qv2ray.v2.6.3.linux-x64.AppImage %f 
Icon=/home/david/Downloads/Paris.jpg

* Ubuntu20.04 Samba

sudo apt install samba samba-common

sudo chmod 777 /home/david/iphone/ -R

sudo smbpasswd -a david
passwd:4

sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak

sudo vim /etc/samba/smb.conf
#+BEGIN_SRC  emacs-lisp
[home]
	comment = home directory
	path = /home
	public = yes
	writable = yes
	workgroup = DAWN
#+END_SRC



sudo service smbd restart







* QQ
https://ubuntuhandbook.org/index.php/2021/02/install-deepin-wechat-qq-ubuntu-20-04/


wget -O- https://deepin-wine.i-m.dev/setup.sh | sh


大功告成，现在可以试试安装更新deepin-wine软件了，如：
微信：sudo apt-get install com.qq.weixin.deepin
QQ：sudo apt-get install com.qq.im.deepin
TIM：sudo apt-get install com.qq.office.deepin
钉钉：sudo apt-get install com.dingtalk.deepin
完整列表见 https://deepin-wine.i-m.dev/

* ubuntu20.04 emacs 中文输入法
sudo nvim /etc/environment
#+BEGIN_SRC emacs-lisp
LC_CTYPE="zh_CN.UTF-8"
#+END_SRC

sudo nvim /etc/locale.conf
#+BEGIN_SRC  emacs-lisp
LANG=en_US.UTF-8 
LC_CTYPE=zh_CN.UTF-8
#+END_SRC

sudo nvim ~/.xprofile
#+BEGIN_SRC  emacs-lisp
export LANG=en_US.UTF-8 
export LC_CTYPE=zh_CN.UTF-8
#+END_SRC




* 安装以及配置fzf
git clone https://github.com/junegunn/fzf.git ~/.fzf

~/.fzf/install

** 配置fzf
nvim ~/.config/zsh/fzf.zsh
#+BEGIN_SRC emacs-lisp
source ~/.fzf/shell/completion.zsh
source ~/.fzf/shell/key-bindings.zsh
#+END_SRC

nvim ~/.zshrc
#+BEGIN_SRC emacs-lisp
source ~/.config/zsh/fzf.zsh
#+END_SRC

* git learning
[remote "aliyun"]
	url = ssh://git@101.201.197.193:10086/home/git/posts.git
	fetch = +refs/heads/*:refs/remotes/origin/*
* emacs yasnippet
https://blog.csdn.net/m0_37386518/article/details/105905755

#+BEGIN_SRC  emacs-lisp
(require 'yasnippet)
;;(yas-global-mode 1)
(define-key yas-minor-mode-map (kbd "<tab>") nil)
(define-key yas-minor-mode-map (kbd "TAB") nil)
(define-key yas-minor-mode-map (kbd "C-/") 'yas-expand)

(yas-reload-all)

(yas-global-mode 1)

(setq yas-snippet-dirs
      '("~/.emacs.d/snippets"
	"~/.emacs.d/elpa/yasnippet-snippets-20210910.1959/snippets"
	))
#+END_SRC



